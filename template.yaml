AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Bot to track team rating on rating.chgk.info and perform some routine tasks.

Parameters:
  TelegramBotToken:
    Type: String
    Description: Token to use for communication with Telegram severs
    NoEcho: true
  AllowSelfRegistration:
    Type: Number
    AllowedValues: [0, 1]
    Default: 1
    Description: Set this to 0 to deny /watch and /unwatch bot commands

Globals:
  Function:
    CodeUri: bot/
    Runtime: ruby2.7

Resources:
  SecretStorage:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: rating_bot_token
      SecretString: !Ref TelegramBotToken

  ChatDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: ChatID
          AttributeType: N
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      TableName: rating_bot_table
      KeySchema:
        - AttributeName: ChatID
          KeyType: HASH

  SendStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: stats.weekly
      Timeout: 150
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: AWSSecretsManagerGetSecretValuePolicy
              Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref SecretStorage
            - Sid: SpecificTable
              Effect: Allow
              Action:
                - "dynamodb:Scan"
              Resource: 
                Fn::Join:
                  - ''
                  - - "arn:aws:dynamodb:*:*:table/"
                    - !Ref ChatDBTable
      Events:
        WeeklyScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(59 16 ? * THU *)
  SendStatsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SendStatsFunction}"
      RetentionInDays: 14

  ProcessCommandFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.message_handler
      Timeout: 30
      Environment:
        Variables:
          BOT_ALLOW_SELF_REGISTRATION: !Ref AllowSelfRegistration
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Sid: AWSSecretsManagerGetSecretValuePolicy
              Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Ref SecretStorage
            - Sid: SpecificTable
              Effect: Allow
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:DeleteItem"
                - "dynamodb:PutItem"
                - "dynamodb:Scan"
              Resource: !Sub "arn:aws:dynamodb:*:*:table/${ChatDBTable}"
#                Fn::Join:
#                  - ''
#                  - - "arn:aws:dynamodb:*:*:table/"
#                    - !Ref ChatDBTable
      Events:
        TelegramWebHook:
          Type: Api
          Properties:
            Path: '/hook'
            Method: post
  ProcessCommandLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ProcessCommandFunction}"
      RetentionInDays: 14

Outputs:
  TelegramWebHookApi:
    Description: "WebHook URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hook/"
  SetWebhookCommand:
    Description: "Use this command to set WebHook"
    Value: !Sub "curl -F \"url=https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hook/\" https://api.telegram.org/bot${TelegramBotToken}/setWebhook"
